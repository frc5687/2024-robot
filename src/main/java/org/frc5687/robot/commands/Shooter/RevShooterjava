package org.frc5687.robot.commands.Shooter;

import java.util.Optional;

import org.frc5687.robot.Constants;
import org.frc5687.robot.RobotState;
import org.frc5687.robot.commands.OutliersCommand;
import org.frc5687.robot.subsystems.Dunker;
import org.frc5687.robot.subsystems.Intake;
import org.frc5687.robot.subsystems.Shooter;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.DriverStation.Alliance;

public class RevShooter extends OutliersCommand{
    private Shooter _shooter;
    private RobotState _robotState = RobotState.getInstance();

    public RevShooter(Shooter shooter) {
        _shooter = shooter;
        addRequirements(_shooter);
    }

    public void execute() {
            boolean onSpeakerFieldHalf = false;
            Optional<Alliance> optionalAlliance = DriverStation.getAlliance();
            if (optionalAlliance.isPresent()) {
                Alliance alliance = optionalAlliance.get();
                if (alliance == Alliance.Blue && _robotState.getEstimatedPose().getX() < Constants.FieldConstants.FIELD_LENGTH / 2) {
                    onSpeakerFieldHalf = true;
                } else if (alliance == Alliance.Red && _robotState.getEstimatedPose().getX() > Constants.FieldConstants.FIELD_LENGTH / 2) {
                    onSpeakerFieldHalf = true;
                }
            }

                _shooter.setTargetRPM(_shooter.calculateRPMFromDistance(_robotState.getDistanceAndAngleToSpeaker().getFirst()));
                _shooter.setToTarget();
        }
    }

    public boolean isFinished() {
        return false;
    }
}
